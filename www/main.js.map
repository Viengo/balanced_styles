{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.scss","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/textpage/textpage.component.html","webpack:///./src/app/textpage/textpage.component.scss","webpack:///./src/app/textpage/textpage.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AppComponent} from \"./app.component\";\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: AppComponent, pathMatch: 'full'},\r\n    {path: 'lesson/:alias', component: AppComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div class=\\\"wrap\\\">\\r\\n    <header class=\\\"header\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <a href=\\\"/\\\" class=\\\"logo\\\">Balanced <span>styles</span></a>\\r\\n        </div>\\r\\n    </header>\\r\\n    <main class=\\\"main flex-top\\\">\\r\\n        <app-sidebar></app-sidebar>\\r\\n        <div [innerHtml]=\\\"body\\\"></div>\\r\\n    </main>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    title: string = 'courses';\r\n    body: any = '';\r\n\r\n    constructor(private http: HttpClient, private route: ActivatedRoute, private router: Router) {\r\n        console.log(router);\r\n        route.params.subscribe((params: Params) => {\r\n            console.log(params);\r\n            http.get('lesson1.php').subscribe((responce) => {\r\n                this.body = responce;\r\n            });\r\n        });\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TextpageComponent } from './textpage/textpage.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TextpageComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"sidebar\\\">\\r\\n  <div class=\\\"sidebar-title\\\">Навигация по урокам</div>\\r\\n  <ul class=\\\"nav\\\">\\r\\n    <li class=\\\"item-0\\\">\\r\\n      <a class=\\\"link-0\\\" href=\\\"#\\\">Get started</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"text-page\\\">\\r\\n  <div class=\\\"h1\\\">Введение</div>\\r\\n  <p>Существует два основных подхода к обучению верстке. Первый подход подразумевает изучение огромного\\r\\n    количества теоретической информации. Далее следует практика.\\r\\n    Предполагается, что к тому моменту,\\r\\n    человек помнит весь основной материал, и может им пользоваться.\\r\\n    Такой подход имеет свои плюсы и минусы. Но очевидно, что теоретическая часть без практики плохо запоминается.\\r\\n    Многие вещи остаются не совсем понятны. Среди действительно важной информации, приходится запоминать множество\\r\\n    таких приемов и терминов, которые очень редко применяются в работе или совсем бесполезны, в особенности новичкам.\\r\\n    Это скучный метод обучения, а потому, мы начнем с самой необходимой теоретической части и сразу\\r\\n    приступим к практике(второй подход). Решение заданий будет стимулировать нас к изучению новой информации,\\r\\n    которая будет гораздо лучше усваиваться. В итоге мы получим теоретическую базу, упорядоченную опытом.\\r\\n\\r\\n  </p>\\r\\n  <div class=\\\"h2\\\">Цели обучения</div>\\r\\n  <p>1. Создать ядро базовых знаний, которое можно будет улучшать и дополнять в зависимости от поставленных задач.\\r\\n    Что это значит? Когда после обучения вы столкнетесь с задачей, для выполнения которой,\\r\\n    у вас нет готового решения, полученных знаний хватит, чтобы выделить суть проблемы и найти способы ее\\r\\n    решения. Как известно, хороший специалист, никогда не перестает обучаться. По окончанию курсов, вы\\r\\n    продолжите получать опыт, но уже с пониманием <b>принципов качественной верстки</b>.\\r\\n  </p>\\r\\n  <p>2. Научиться создавать веб-страницы, код которых, легко читать и изменять, даже если вы делали их год\\r\\n    назад.\\r\\n    Это один из самых важных принципов хорошего верстальщика. Создать веб-страницу легко,\\r\\n    но сделать ее гибкой к изменениям, с максимально простой структурой, понятной даже постороннему специалисту\\r\\n    - это цель, к которой необходимо всегда стремиться.\\r\\n  </p>\\r\\n  <p>3. Научиться создавать веб-страницы,\\r\\n    которые полностью соответствуют макету дизайна и выглядят одинаково во всех современных браузерах,\\r\\n    а также имеют минимальное время загрузки в браузере.</p>\\r\\n  <p>4. Во время обучения, мы будем выполнять практические задания. В процессе, мы освоим все типичные приемы\\r\\n    верстки, без которых не обходится создание ни одного проекта. Суммарным результатом этих заданий будет\\r\\n    веб-страница, включающая в себя все, чему мы обучились. Это гарантирует, что по окончанию курсов, у вас будет\\r\\n    собственная шпаргалка, к которой можно обращаться до тех пор, пока ваш опыт не дойдет до необходимого уровня.\\r\\n  </p>\\r\\n  <div class=\\\"h2\\\">Основы</div>\\r\\n  <div class=\\\"h3\\\">Что такое веб-страница</div>\\r\\n  <p>Веб-страница это совокупность файлов, которые отображаются с помощью браузера как одно приложение. На самом деле,\\r\\n    достаточно только одного файла с расширением <span class=\\\"selected-word\\\">*.html</span> <br>\\r\\n    Но для увеличения функциональности и создания необходимого графического интерфейса, в файл *.html подключаются:<br>\\r\\n    - файлы стилей <span class=\\\"selected-word\\\">*.css</span><br>\\r\\n    - скрипты <span class=\\\"selected-word\\\">*.js</span><br>\\r\\n    - изображения <span class=\\\"selected-word\\\">*.jpg, *.png, *.gif, *.svg</span><br>\\r\\n    - шрифты <span class=\\\"selected-word\\\">*.eot, *.ttf, *.svg, *.woff, *.woff2</span><br>\\r\\n    - иконки <span class=\\\"selected-word\\\">*.ico</span><br>\\r\\n    Для корректного отображения страницы, текстовые файлы (.html, .css, .js),\\r\\n    сохраняются в кодировке <span class=\\\"selected-word\\\">UTF-8</span>, для простого примера, посмотрите,\\r\\n    как это делается с помощью программы notepad (аналогичная возможность есть в любом текстовом редакторе).\\r\\n  </p>\\r\\n  <div class=\\\"faq-img-wrap\\\">\\r\\n    <img [src]=\\\"utf1\\\" alt=\\\"\\\">\\r\\n    <img src=\\\"/images/faq/utf-2.jpg\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <p>Если вы открыли страницу в браузере и увидели что-то такое:</p>\\r\\n  <div class=\\\"faq-img-wrap\\\">\\r\\n    <img src=\\\"/images/faq/utf-3.jpg\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <p>Это значит, что кодировка файлов не правильная.</p>\\r\\n  <div class=\\\"h3\\\">Структура проекта</div>\\r\\n  <p>Файлы проекта размещаются в папках с соответствующим названием <br>\\r\\n    Файлы *.html размещаются в корневой папке проекта</p>\\r\\n  <div class=\\\"faq-img-wrap\\\">\\r\\n    <img src=\\\"/images/faq/structure.jpg\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RleHRwYWdlL3RleHRwYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-textpage',\r\n  templateUrl: './textpage.component.html',\r\n  styleUrls: ['./textpage.component.scss']\r\n})\r\nexport class TextpageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}